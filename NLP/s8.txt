/*
s8. Write a solidity program to overload bitwise or operator for 2 3 and 4
parameters and then perform multiplication on the values passed in to 2
parameters, addition of the values passed in 3 parameters and
subtraction of values in 4 parameters.
*/

// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.8.2 <0.9.0;


contract BitwiseOperatorOverloading {
    function bitwiseOr(uint256 _a, uint256 _b) public pure returns (uint256 mul,uint256 or) {
        //return _a | _b; 
        uint256 mul = _a * _b;
        uint256 or = _a | _b;
        return (mul,or);
    }

    function bitwiseOr(uint256 _a, uint256 _b, uint256 _c) public pure returns (uint256 add,uint256 or) {
        //return _a | _b | _c; 
        uint256 add = _a + _b + _c;
        uint256 or = _a | _b | _c;
        return (add,or);
    }

    function bitwiseOr(uint256 _a, uint256 _b, uint256 _c, uint256 _d) public pure returns (uint256 sub,uint256 or) {
       // return _a | _b | _c | _d; 
        uint256 sub = _a - _b - _c - _d;
        uint256 or = _a | _b | _c | _d;
        return (sub,or);    
        }

}
