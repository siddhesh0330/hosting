#A matrix ,vector tensor operation
import numpy as np
import tensorflow as tf
x=np.array([1,2])
A=np.array([[1,2],[3,4]])
tensor_A=tf.constant([[1,2]],dtype=tf.int32)
print("Vector:",x)
print("Array:",A)
print("Tensor:",tensor_A)
A=np.array([[1,2],[3,4]])
B=np.array([[2,5],[7,4]])
C=np.matmul(A,B)
print("\nMatrix Multiplication:\n",C)
x=np.array([1,2])
y=np.array([5,6])
z=x*y
print("\nVector Multiplication:\n",z)
z=np.dot(x,y)
print("\nDot Product:\n",z)
r = np.cross(x,y)
print("\nCross Product:\n",r)
tensor_A=tf.constant([[1,2]],dtype=tf.int32)
tensor_B=tf.constant([[1,3]],dtype=tf.int32)
result=tf.math.multiply(tensor_A,tensor_B)
print("\nTensor Multiplcation:\n", result)
print("\nMatrix Addition:\n",C)
z=x+y
print("\nVector Addition:\n",z)
result=tensor_A+tensor_B
print("\nTensor Addition:\n", result)
z=np.dot(A,x)
print("Matrix with Vector multiplication:\n",z)
print("Inverse of Matrix:\n", np.linalg.inv(A))


#b. Multiplication of two: Vector, Matrix and Tensor
A=np.array([[1,2],[3,4]])
B=np.array([[2,5],[7,4]])
C=np.matmul(A,B)
print("\nMatrix Multiplication:\n",C)
x=np.array([1,2])
y=np.array([5,6])
z=x*y
print("\nVector Multiplication:\n",z)
z=np.dot(x,y)
print("\nDot Product:\n",z)
r = np.cross(x,y)
print("\nCross Product:\n",r)
tensor_A=tf.constant([[1,2]],dtype=tf.int32)
tensor_B=tf.constant([[1,3]],dtype=tf.int32)
result=tf.math.multiply(tensor_A,tensor_B)
print("\nTensor Multiplcation:\n", result)
