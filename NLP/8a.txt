//8A Withdrawal Pattern

//SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.8.2 <0.9.0;
contract WithdrawalPattern{
 address public richest;
 uint public mostSent;
mapping (address => uint) pendingWithdrawals;
 constructor() payable {
 richest = msg.sender;
 mostSent = msg.value;
 }
 function becomeRichest() public payable returns (bool) {
 if (msg.value > mostSent) {
 pendingWithdrawals[richest] += msg.value;
 richest = msg.sender;
 mostSent = msg.value;
 return true;
 } else {
 return false;
 } }
 function withdraw() public {
 address payable receiver = payable(msg.sender);
 uint amount = pendingWithdrawals[msg.sender];
 pendingWithdrawals[msg.sender] = 0;
 receiver.transfer(amount);
} }