
#5A Evaluating feed forwant deep network for regression using KFold cross validation
from sklearn.model_selection import KFold
import numpy as np
from keras.models import Sequential
from keras.layers import Dense
print("30_vinayak")
dataset = np.genfromtxt("/content/drive/MyDrive/Colab Notebooks/DL/diabetes.csv",delimiter=",")
x = dataset[:,0:8]
y = dataset[:,8]
kfold = KFold(n_splits=5,shuffle=True)
model = Sequential()
model.add(Dense(12,input_dim=8,activation="relu"))
model.add(Dense(8,activation="relu"))
model.add(Dense(1,activation="sigmoid"))
model.compile(loss="binary_crossentropy",optimizer="adam",metrics=["accuracy"])
res = kfold.split(x)
for train_index , test_index in res:
  x_train , x_test = x[train_index], x[test_index]
  y_train , y_test = y[train_index], y[test_index]
  model.fit(x_train,y_train,epochs=10,batch_size=10,verbose=0)
  _, accuracy = model.evaluate(x_test,y_test)
  print("Accuracy : %.2f%%" %(accuracy * 100))

#5B Evaluating feed forward deep network for multiclass classification using KFold validation
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Dense
from sklearn.model_selection import train_test_split,KFold
import seaborn as sns
print("30_vinayak")
df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/DL/Flower.csv")
print(df.shape)
print(df.head(10))
df.describe()
df.isnull().sum()
sns.set(style="darkgrid")
sns.pairplot(df,hue="species")
corr_matrix = ["sepal_length","sepal_width","petal_length","petal_width"]
sns.heatmap(df[corr_matrix].corr(),annot=True)
plt.title("Correlation between values")
plt.show()
typeofiris = df["species"].value_counts()
plt.pie(typeofiris,labels=typeofiris.index,autopct="%1.1f%%",startangle=90, colors=["lightblue","lightcoral","lightyellow"])
plt.title("IRIS SPCIES")
plt.show()
y = pd.get_dummies(df["species"])
x = df.drop(["species"],axis=1)
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)
model = Sequential()
model.add(Dense(4,activation="linear"))
model.add(Dense(12,activation="sigmoid"))
model.add(Dense(3,activation="softmax"))
model.compile(loss="categorical_crossentropy",metrics=["accuracy"])
model.fit(x_train,y_train,epochs=25,batch_size=3,verbose=0)
#kf = KFold(n_splits=5, shuffle=True)
#for train_index, test_index in kf.split(x):
    #x_train, x_test = x.iloc[train_index], x.iloc[test_index]
    #y_train, y_test = y.iloc[train_index], y.iloc[test_index]
    #model.fit(x_train, y_train, epochs=25, batch_size=5, verbose=0)
    #_,accuracy = model.evaluate(x_test, y_test)
    #print("Accuracy : %.2f%%"%(accuracy*100))
score = model.evaluate(x_test,y_test)
print("Accuracy : " , score )
df.head(10)
class_name = [" IRIS SETOSA","IRIS VERSICOLOR","IRIS VERGINICA"]
p = model.predict([[5.1,3.5,1.4,0.2]])
max_index = np.argmax(p)
predicted_class = class_name[max_index]
print(p)
print("Predicted class : ",predicted_class)